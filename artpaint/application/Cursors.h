/*
 * Copyright 2003, Heikki Suhonen
 * Distributed under the terms of the MIT License.
 *
 * Authors:
 * 		Heikki Suhonen <heikki.suhonen@gmail.com>
 *
 */
#ifndef CURSORS_H
#define	CURSORS_H

enum {
	CROSS_HAIR_CURSOR_MODE,
	TOOL_CURSOR_MODE
};

// this is a CrossHair-cursor
const unsigned char HS_CROSS_CURSOR[] =
		{
			0x10, 0x01, 0x07, 0x07,
			// here starts the image data
			0x01, 0x00, 0x01, 0x00,		// lines 0 and 1
			0x01, 0x00, 0x01, 0x00,		// lines 2 and 3
			0x01, 0x00, 0x00, 0x00,		// lines 4 and 5
			0x00, 0x00, 0xF8, 0x3E,		// lines 6 and 7
			0x00, 0x00, 0x00, 0x00,		// lines 8 and 9
			0x01, 0x00, 0x01, 0x00,		// lines 10 and 11
			0x01, 0x00, 0x01, 0x00,		// lines 12 and 13
			0x01, 0x00, 0x00, 0x00,		// lines 14 and 15

			// here starts the mask data
			0x01, 0x00, 0x01, 0x80,		// lines 0 and 1
			0x01, 0x80, 0x01, 0x80,		// lines 2 and 3
			0x01, 0x80, 0x00, 0x80,		// lines 4 and 5
			0x00, 0x00, 0xF8, 0x3E,		// lines 6 and 7
			0x7C, 0x1F, 0x00, 0x00,		// lines 8 and 9
			0x01, 0x00, 0x01, 0x80,		// lines 10 and 11
			0x01, 0x80, 0x01, 0x80,		// lines 12 and 13
			0x01, 0x80, 0x00, 0x80		// lines 14 and 15
		};


const unsigned char HS_SPRAY_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x03,
			0x14, 0x0, 0x10, 0x80,
			0x4, 0x28, 0xc6, 0x8c,
			0x1, 0x0, 0x10, 0x3e,
			0x10, 0x22, 0x0, 0x22,
			0x0, 0x22, 0x0, 0x22,
			0x0, 0x22, 0x0, 0x22,
			0x0, 0x22, 0x0, 0x22,
			0x0, 0x1c, 0x0, 0x0,
			0x14, 0x0, 0x13, 0x80,
			0x16, 0x68, 0xee, 0x8c,
			0x13, 0x86, 0x14, 0x3e,
			0x10, 0x33, 0x0, 0x33,
			0x0, 0x33, 0x0, 0x33,
			0x0, 0x33, 0x0, 0x33,
			0x0, 0x33, 0x0, 0x33,
			0x0, 0x1e, 0x0, 0xc,
		};


const unsigned char TEST_CURSOR[] =
		{
			0x10, 0x01, 0x01, 0x01,
			0x0, 0x0, 0x0, 0x0,
			0x1f, 0xfc, 0x20, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x8, 0x12, 0x9, 0x12,
			0x7f, 0xff, 0x9, 0x12,
			0x9, 0x12, 0x9, 0x12,
			0x0, 0x12, 0x0, 0x2,
			0x0, 0x2, 0x0, 0x2,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x76, 0xed, 0x76, 0xed,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
		};


const unsigned char HS_BLOCKING_CURSOR[] =
		{
			0x10,0x01,0x07,0x07,

			0xFF, 0xFF, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0x80, 0x01,
			0x80, 0x01, 0xFF, 0xFF,

			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
			0xFF, 0xFF, 0xFF, 0xFF,
		};


const unsigned char HS_MINUS_PLUS_HAND_CURSOR[] =
		{
			0x10, 0x01, 0x01, 0x01,
			0x0, 0x0, 0x0, 0x4,
			0x39, 0xce, 0x24, 0x4,
			0x24, 0x0, 0x13, 0xe0,
			0x12, 0x5c, 0x9, 0x2a,
			0x8, 0x1, 0x3c, 0x1,
			0x4c, 0x1, 0x42, 0x1,
			0x30, 0x1, 0xc, 0x1,
			0x2, 0x0, 0x1, 0x0,
			0x0, 0x0, 0x0, 0x4,
			0x39, 0xce, 0x3c, 0x4,
			0x3c, 0x0, 0x1f, 0xe0,
			0x1f, 0xfc, 0xf, 0xfe,
			0xf, 0xff, 0x3f, 0xff,
			0x7f, 0xff, 0x7f, 0xff,
			0x3f, 0xff, 0xf, 0xff,
			0x3, 0xff, 0x1, 0xff,
		};

const unsigned char HS_FREE_LINE_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x04,
			0x8, 0x0, 0x8, 0x0,
			0x0, 0x0, 0x63, 0x0,
			0x0, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x0, 0xe0,
			0x0, 0x10, 0x0, 0x10,
			0x0, 0x10, 0x0, 0x20,
			0x0, 0x20, 0x0, 0x20,
			0x0, 0x18, 0x0, 0x0,
			0x8, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x77, 0x0,
			0x8, 0x0, 0x8, 0x0,
			0x8, 0xe0, 0x0, 0xf0,
			0x0, 0x18, 0x0, 0x18,
			0x0, 0x18, 0x0, 0x30,
			0x0, 0x30, 0x0, 0x38,
			0x0, 0x18, 0x0, 0x0,
		};

const unsigned char HS_RECTANGLE_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x04,
			0x8, 0x0, 0x8, 0x0,
			0x0, 0x0, 0x63, 0x0,
			0x0, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x0, 0xff,
			0x0, 0x81, 0x0, 0x81,
			0x0, 0x81, 0x0, 0x81,
			0x0, 0x81, 0x0, 0x81,
			0x0, 0x81, 0x0, 0xff,
			0x8, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x77, 0x0,
			0x8, 0x0, 0x8, 0x0,
			0x9, 0xfe, 0x1, 0xff,
			0x1, 0x83, 0x1, 0x83,
			0x1, 0x83, 0x1, 0x83,
			0x1, 0x83, 0x1, 0x83,
			0x1, 0xff, 0x0, 0xff,
		};

const unsigned char HS_LINE_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x03,
			0x8, 0x0, 0x8, 0x0,
			0x0, 0x0, 0x63, 0x0,
			0x0, 0x0, 0xa, 0x0,
			0x9, 0x0, 0x0, 0x80,
			0x0, 0x40, 0x0, 0x20,
			0x0, 0x10, 0x0, 0x8,
			0x0, 0x4, 0x0, 0x2,
			0x0, 0x0, 0x0, 0x0,
			0x8, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x77, 0x0,
			0x8, 0x0, 0xa, 0x0,
			0xb, 0x0, 0x1, 0x80,
			0x0, 0xc0, 0x0, 0x60,
			0x0, 0x30, 0x0, 0x18,
			0x0, 0xc, 0x0, 0x6,
			0x0, 0x2, 0x0, 0x0,
		};

const unsigned char HS_ELLIPSE_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x03,
			0x10, 0x0, 0x10, 0x0,
			0x0, 0x0, 0xc6, 0x0,
			0x0, 0x0, 0x10, 0xe0,
			0x13, 0x18, 0x2, 0x8,
			0x4, 0x4, 0x4, 0x4,
			0x4, 0x4, 0x2, 0x8,
			0x3, 0x18, 0x0, 0xe0,
			0x0, 0x0, 0x0, 0x0,
			0x10, 0x0, 0x10, 0x0,
			0x10, 0x0, 0xee, 0x0,
			0x10, 0x0, 0x10, 0xe0,
			0x13, 0x78, 0x3, 0x8c,
			0x5, 0x4, 0x6, 0x6,
			0x6, 0x6, 0x2, 0xa,
			0x3, 0x1c, 0x1, 0xec,
			0x0, 0x70, 0x0, 0x0,
		};


const unsigned char HS_BRUSH_CURSOR[] =
		{
			0x10, 0x01, 0x0c, 0x03,
			0x0, 0x1, 0x0, 0x2,
			0x0, 0x4, 0x0, 0x8,
			0x0, 0x10, 0x0, 0x20,
			0x0, 0x40, 0x1, 0x80,
			0x1, 0x80, 0x13, 0x0,
			0x16, 0x0, 0x0, 0x0,
			0xc6, 0x0, 0x0, 0x0,
			0x10, 0x0, 0x10, 0x0,
			0x0, 0x1, 0x0, 0x3,
			0x0, 0x6, 0x0, 0xc,
			0x0, 0x18, 0x0, 0x30,
			0x0, 0x60, 0x1, 0xc0,
			0x1, 0x80, 0x13, 0x80,
			0x17, 0x0, 0x16, 0x0,
			0xee, 0x0, 0x10, 0x0,
			0x10, 0x0, 0x10, 0x0,
		};

const unsigned char HS_HAIRY_BRUSH_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x03,
			0x10, 0x0, 0x10, 0x0,
			0x0, 0x0, 0xc6, 0x0,
			0x0, 0x0, 0x11, 0x0,
			0x12, 0x80, 0x5, 0x40,
			0x2, 0xa0, 0x1, 0x50,
			0x0, 0xa8, 0x0, 0x54,
			0x0, 0x2a, 0x0, 0x14,
			0x0, 0x8, 0x0, 0x0,
			0x10, 0x0, 0x10, 0x0,
			0x10, 0x0, 0xee, 0x0,
			0x10, 0x0, 0x13, 0x0,
			0x17, 0x80, 0x7, 0xc0,
			0x3, 0xe0, 0x1, 0xf0,
			0x0, 0xf8, 0x0, 0x7c,
			0x0, 0x3e, 0x0, 0x1c,
			0x0, 0x8, 0x0, 0x0,
		};


const unsigned char HS_FILL_CURSOR[] =
		{
			0x10, 0x01, 0x0c, 0x07,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x60,
			0x0, 0x58, 0x0, 0x46,
			0x0, 0x81, 0x0, 0xab,
			0x1, 0xd6, 0x0, 0x3a,
			0x1, 0xc, 0x0, 0x0,
			0xc, 0x60, 0x0, 0x0,
			0x1, 0x0, 0x1, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x60,
			0x0, 0x58, 0x0, 0x46,
			0x0, 0x81, 0x1, 0xff,
			0x1, 0xfe, 0x1, 0x3e,
			0x1, 0xc, 0x1, 0x0,
			0xe, 0xe0, 0x1, 0x0,
			0x1, 0x0, 0x1, 0x0,
		};


const unsigned char HS_BLUR_CURSOR[] =
		{
			0x10, 0x01, 0x03, 0x03,
			0x10, 0x0, 0x10, 0x0,
			0x0, 0x0, 0xc6, 0x0,
			0x1, 0x0, 0x10, 0x40,
			0x12, 0x0, 0x8, 0x8,
			0x0, 0x80, 0x4, 0x0,
			0x0, 0x20, 0x0, 0x0,
			0x1, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x10, 0x0, 0x10, 0x0,
			0x10, 0x0, 0xee, 0x0,
			0x11, 0x0, 0x11, 0x40,
			0x12, 0x40, 0xc, 0x48,
			0x0, 0x88, 0x7, 0x8,
			0x0, 0x30, 0x0, 0x20,
			0x1, 0xc0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
		};

const unsigned char HS_TEXT_CURSOR[] =
		{
			0x10, 0x01, 0x02, 0x02,
			0x20, 0x0, 0x0, 0x0,
			0x88, 0x0, 0x0, 0x0,
			0x20, 0x0, 0x0, 0x80,
			0x0, 0xc0, 0x1, 0x40,
			0x1, 0x20, 0x1, 0x20,
			0x1, 0xf0, 0x2, 0x10,
			0x2, 0x18, 0x7, 0x3c,
			0x0, 0x0, 0x0, 0x0,
			0x20, 0x0, 0x20, 0x0,
			0xd8, 0x0, 0x20, 0x0,
			0x20, 0x0, 0x1, 0x80,
			0x1, 0xc0, 0x3, 0xc0,
			0x3, 0x60, 0x3, 0x60,
			0x3, 0xf0, 0x6, 0x30,
			0x6, 0x38, 0xf, 0x7c,
			0x0, 0x0, 0x0, 0x0,
		};

const unsigned char HS_TRANSPARENCY_CURSOR[] =
		{
			0x10, 0x01, 0x07, 0x07,
			0x0, 0x0, 0x7f, 0xfe,
			0x41, 0x2, 0x41, 0x2,
			0x41, 0x2, 0x41, 0x2,
			0x41, 0x2, 0x7f, 0xfe,
			0x41, 0x2, 0x41, 0x2,
			0x41, 0x2, 0x41, 0x2,
			0x41, 0x2, 0x41, 0x2,
			0x7f, 0xfe, 0x0, 0x0,
			0x0, 0x0, 0x7f, 0xfe,
			0x41, 0x2, 0x51, 0x42,
			0x61, 0x12, 0x51, 0x26,
			0x41, 0x4a, 0x7f, 0xfe,
			0x49, 0x22, 0x51, 0x42,
			0x45, 0x12, 0x49, 0x22,
			0x51, 0x46, 0x41, 0xa,
			0x7f, 0xfe, 0x0, 0x0,
		};

const unsigned char HS_ERASER_CURSOR[] =
		{
			0x10, 0x01, 0x0c, 0x5,
			0x0, 0x40, 0x0, 0xc0,
			0x1, 0x20, 0x2, 0x70,
			0x4, 0x88, 0x9, 0x4,
			0x12, 0x8, 0x24, 0x10,
			0x28, 0x20, 0x30, 0x40,
			0x10, 0x80, 0x9, 0x0,
			0x6, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
			0x0, 0x40, 0x0, 0xc0,
			0x1, 0xe0, 0x3, 0xf0,
			0x7, 0xf8, 0xf, 0xfc,
			0x1f, 0xf8, 0x3f, 0xf0,
			0x3f, 0xe0, 0x3f, 0xc0,
			0x1f, 0x80, 0xf, 0x0,
			0x6, 0x0, 0x0, 0x0,
			0x0, 0x0, 0x0, 0x0,
		};


const unsigned char HS_SELECTOR_CURSOR[] =
		{
			0x10, 0x01, 0x02, 0x02,
			0x20, 0x0, 0x0, 0x0,
			0x88, 0x0, 0x2, 0x0,
			0x22, 0x0, 0x1, 0x0,
			0x39, 0x0, 0x6, 0x9c,
			0x1, 0xb6, 0x0, 0x72,
			0x0, 0xde, 0x0, 0xa0,
			0x0, 0xa0, 0x0, 0xb0,
			0x0, 0xe0, 0x0, 0x0,
			0x20, 0x0, 0x20, 0x0,
			0xd8, 0x0, 0x23, 0x0,
			0x23, 0x0, 0x1, 0x80,
			0x39, 0x9c, 0x1e, 0xbe,
			0x3, 0xbe, 0x0, 0xf6,
			0x1, 0xfe, 0x1, 0xbe,
			0x1, 0xb0, 0x1, 0xb0,
			0x1, 0xf0, 0x0, 0xe0,
		};


const unsigned char HS_COLOR_SELECTOR_CURSOR[] =
		{
			0x10, 0x01, 0x0f, 0x05,
			0x0, 0x0, 0x0, 0x3e,
			0x0, 0x42, 0x0, 0x83,
			0x1, 0x81, 0x1, 0x1,
			0x3, 0xc3, 0x3, 0x66,
			0x4, 0x38, 0x8, 0x0,
			0x0, 0x0, 0x8, 0x0,
			0x8, 0x0, 0x14, 0x0,
			0x1c, 0x0, 0x0, 0x0,
			0x0, 0x3e, 0x0, 0x7e,
			0x0, 0xc2, 0x1, 0x83,
			0x3, 0x81, 0x3, 0x1,
			0x3, 0xc3, 0x7, 0x66,
			0xc, 0x38, 0x8, 0x0,
			0x0, 0x0, 0x18, 0x0,
			0x38, 0x0, 0x34, 0x0,
			0x3c, 0x0, 0x18, 0x0,
		};


const unsigned char HS_TRANSLATION_CURSOR[] = {
	0x10, 0x01, 0x07, 0x07,

	// here starts the image data
	0x01, 0x00, 0x03, 0x80,		// lines 0 and 1
	0x07, 0xC0, 0x01, 0x00,		// lines 2 and 3
	0x01, 0x00, 0x21, 0x08,		// lines 4 and 5
	0x60, 0x0C, 0xFC, 0x7E,		// lines 6 and 7
	0x60, 0x0C, 0x21, 0x08,		// lines 8 and 9
	0x01, 0x00, 0x01, 0x00,		// lines 10 and 11
	0x07, 0xC0, 0x03, 0x80,		// lines 12 and 13
	0x01, 0x00, 0x00, 0x00,		// lines 14 and 15

	// here starts the mask-data
	0x03, 0x80, 0x07, 0xC0,		// lines 0 and 1
	0x0F, 0xE0, 0x03, 0x80,		// lines 2 and 3
	0x23, 0x88, 0x63, 0x8C,		// lines 4 and 5
	0xFC, 0x7E, 0xFC, 0x7E,		// lines 6 and 7
	0xFC, 0x7E, 0x63, 0x8C,		// lines 8 and 9
	0x23, 0x88, 0x03, 0x80,		// lines 10 and 11
	0x0F, 0xE0, 0x07, 0xC0,		// lines 12 and 13
	0x03, 0x80, 0x00, 0x00,		// lines 14 and 15
};


const unsigned char HS_ROTATION_CURSOR[] = {
	0x10, 0x01, 0x03, 0x03,

	// here starts the image data
	0x00, 0x00, 0x00, 0x00,		// lines 0 and 1
	0x18, 0x1C, 0x24, 0x18,		// lines 2 and 3
	0x24, 0x14, 0x18, 0x02,		// lines 4 and 5
	0x00, 0x02, 0x00, 0x02,		// lines 6 and 7
	0x00, 0x02, 0x00, 0x02,		// lines 8 and 9
	0x00, 0x04, 0x70, 0x04,		// lines 10 and 11
	0x60, 0x08, 0x58, 0x30,		// lines 12 and 13
	0x07, 0xC0, 0x00, 0x00,		// lines 14 and 15

	// here starts the mask-data
	0x00, 0x00, 0x18, 0x3C,		// lines 0 and 1
	0x38, 0x3C, 0x64, 0x38,		// lines 2 and 3
	0x64, 0x34, 0x38, 0x06,		// lines 4 and 5
	0x00, 0x06, 0x00, 0x06,		// lines 6 and 7
	0x00, 0x06, 0x00, 0x06,		// lines 8 and 9
	0xF0, 0x0C, 0xF0, 0x0C,		// lines 10 and 11
	0xF8, 0x38, 0xDF, 0xF0,		// lines 12 and 13
	0x07, 0xC0, 0x00, 0x00		// lines 14 and 15
};

#endif
